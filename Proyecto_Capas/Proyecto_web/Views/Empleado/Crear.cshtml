@model Entidad.Empleado

@{
    ViewBag.Title = "Crear";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Nuevo Empleado</h2>
@*@using (Html.BeginForm())*@


<form action="@Url.Action("Crear","Empleado")" method="post" id="frmEmpleado">
    @Html.AntiForgeryToken()   
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">            
            @Html.LabelFor(model => model.IdEmpleado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdEmpleado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IdEmpleado, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group row">
            <label for="Nombres" class="col-sm-2 col-form-label col-form-label-sm">Nombre del Empleado</label>
            @*@Html.LabelFor(model => model.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-sm-10">
                <input type="text" class="form-control form-control-sm" id="Nombres" name="Nombres" placeholder="Nombre del Empleado" />
                @*@Html.EditorFor(model => model.Nombres, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Nombres, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label for="Apellidos" class="col-sm-2 col-form-label col-form-label-sm">Apellidos del Empleado</label>
            @*@Html.LabelFor(model => model.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-sm-10">
                <input type="text" class="form-control form-control-sm" id="Apellidos" name="Apellidos" placeholder="Apellidos del Empleado" />
                @*@Html.EditorFor(model => model.Apellidos, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Apellidos, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label for="Email" class="col-sm-2 col-form-label col-form-label-sm">Email</label>
            @*@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-sm-10">
                <input type="text" class="form-control form-control-sm" id="Email" name="Email" placeholder="Email" />
                @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label for="Direccion" class="col-sm-2 col-form-label col-form-label-sm">Direccion</label>
            @*@Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-sm-10">
                <input type="text" class="form-control form-control-sm" id="Direccion" name="Direccion" placeholder="Direccion" />
                @*@Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label for="Celular" class="col-sm-2 col-form-label col-form-label-sm">Celular</label>
            @*@Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-sm-10">
                <input type="text" class="form-control form-control-sm" id="Celular" name="Celular" placeholder="Celular" />
                @*@Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <label for="IdDepartamento" class="col-sm-2 col-form-label col-form-label-sm">Departamento</label>           
            <div class="col-sm-10">
                <select class="form-control form-control-sm" id="IdDepartamento" name="IdDepartamento" >
                    <option value="">Selecione</option>
                </select>
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    
</form>
<div>
    @Html.ActionLink("Regresar", "Inicio")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script>
    getData();
    function getData() {
        $.ajax({
            type: "Get",
            url: "/Departamento/GetDepartamentos",
            dataType: "json",
            success: function (result) {
                $.each(result.data, function (key, item) {
                    $("#IdDepartamento").append('<option value=' + item.IdDepartamento + '>' + item.NombreDepartamento + '</option>');
                });
            },
            error: function (data) {
                alert('error');
            }
        });
    }

    $("#frmEmpleado").submit(function (event) {
            event.preventDefault(); //para que no reinicialice

            var nombres = $("#Nombres").val();
            var apellidos = $("#Apellidos").val();
            

            if($.trim(nombres)=="")
            {
                alert("Debe ingresar el nombre del empleado");
                return;
            }

            if ($.trim(apellidos) == "") {
                alert("Debe ingresar el apellidos del empleado");
                return;
            }

            var dptoId = $("#IdDepartamento").val();
            if (dptoId == "")
            {
                alert("Debe selecionar un departamento");
                return;
            }

            var post_url = $(this).attr("action"); // obtener url
            var request_method = $(this).attr("method"); // obtener el GET/POST del metodo
            var form_data = $(this).serializeArray(); // se obtiene todos los elementos del forulario
            console.log(form_data);
            //return;
            LoadingOverlayShow("#frmProyecto");
            $.ajax({
                url: post_url,
                type: request_method,
                data: form_data,
            }).done(function (response) {
                console.log(response);
                LoadingOverlayHide("#frmProyecto");
                if (response.ok == true) {
                    alert("Proyecto creado correctamente");
                    window.location = response.toRedirect;
                }
                else {
                    alert(response.msg);
                }


            }).fail(function (jqXHR, textStatus, errorThrown) {
                LoadingOverlayHide("#frmProyecto");                
            });
        });


</script>
}
